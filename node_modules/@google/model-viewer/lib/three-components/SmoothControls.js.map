{"version":3,"file":"SmoothControls.js","sourceRoot":"","sources":["../../src/three-components/SmoothControls.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Euler, Event as ThreeEvent, EventDispatcher, PerspectiveCamera, Spherical} from 'three';\n\nimport {TouchAction} from '../features/controls.js';\nimport {clamp} from '../utilities.js';\n\nimport {Damper, SETTLING_TIME} from './Damper.js';\n\n\nexport type InteractionPolicy = 'always-allow'|'allow-when-focused';\nexport type TouchMode = null|((event: TouchEvent) => void);\n\nexport interface Pointer {\n  clientX: number, clientY: number,\n}\n\nexport interface SmoothControlsOptions {\n  // The closest the camera can be to the target\n  minimumRadius?: number;\n  // The farthest the camera can be from the target\n  maximumRadius?: number;\n  // The minimum angle between model-up and the camera polar position\n  minimumPolarAngle?: number;\n  // The maximum angle between model-up and the camera polar position\n  maximumPolarAngle?: number;\n  // The minimum angle between model-forward and the camera azimuthal position\n  minimumAzimuthalAngle?: number;\n  // The maximum angle between model-forward and the camera azimuthal position\n  maximumAzimuthalAngle?: number;\n  // The minimum camera field of view in degrees\n  minimumFieldOfView?: number;\n  // The maximum camera field of view in degrees\n  maximumFieldOfView?: number;\n  // Controls when interaction is allowed (always, or only when focused)\n  interactionPolicy?: InteractionPolicy;\n  // Controls scrolling behavior\n  touchAction?: TouchAction;\n}\n\nexport const DEFAULT_OPTIONS = Object.freeze<SmoothControlsOptions>({\n  minimumRadius: 0,\n  maximumRadius: Infinity,\n  minimumPolarAngle: Math.PI / 8,\n  maximumPolarAngle: Math.PI - Math.PI / 8,\n  minimumAzimuthalAngle: -Infinity,\n  maximumAzimuthalAngle: Infinity,\n  minimumFieldOfView: 10,\n  maximumFieldOfView: 45,\n  interactionPolicy: 'always-allow',\n  touchAction: 'pan-y'\n});\n\n// Constants\nconst KEYBOARD_ORBIT_INCREMENT = Math.PI / 8;\nconst ZOOM_SENSITIVITY = 0.04;\n\nexport const KeyCode = {\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\nexport type ChangeSource = 'user-interaction'|'none';\n\nexport const ChangeSource: {[index: string]: ChangeSource} = {\n  USER_INTERACTION: 'user-interaction',\n  NONE: 'none'\n};\n\n/**\n * ChangEvents are dispatched whenever the camera position or orientation has\n * changed\n */\nexport interface ChangeEvent extends ThreeEvent {\n  /**\n   * determines what was the originating reason for the change event eg user or\n   * none\n   */\n  source: ChangeSource,\n}\n\nexport interface PointerChangeEvent extends ThreeEvent {\n  type: 'pointer-change-start'|'pointer-change-end';\n  pointer: Pointer;\n}\n\n/**\n * SmoothControls is a Three.js helper for adding delightful pointer and\n * keyboard-based input to a staged Three.js scene. Its API is very similar to\n * OrbitControls, but it offers more opinionated (subjectively more delightful)\n * defaults, easy extensibility and subjectively better out-of-the-box keyboard\n * support.\n *\n * One important change compared to OrbitControls is that the `update` method\n * of SmoothControls must be invoked on every frame, otherwise the controls\n * will not have an effect.\n *\n * Another notable difference compared to OrbitControls is that SmoothControls\n * does not currently support panning (but probably will in a future revision).\n *\n * Like OrbitControls, SmoothControls assumes that the orientation of the camera\n * has been set in terms of position, rotation and scale, so it is important to\n * ensure that the camera's matrixWorld is in sync before using SmoothControls.\n */\nexport class SmoothControls extends EventDispatcher {\n  public sensitivity = 1;\n\n  private _interactionEnabled: boolean = false;\n  private _options: SmoothControlsOptions;\n  private _disableZoom = false;\n  private isUserChange = false;\n  private isUserPointing = false;\n\n  // Internal orbital position state\n  private spherical = new Spherical();\n  private goalSpherical = new Spherical();\n  private thetaDamper = new Damper();\n  private phiDamper = new Damper();\n  private radiusDamper = new Damper();\n  private logFov = Math.log(DEFAULT_OPTIONS.maximumFieldOfView!);\n  private goalLogFov = this.logFov;\n  private fovDamper = new Damper();\n\n  // Pointer state\n  private touchMode: TouchMode = null;\n  private lastPointerPosition: Pointer = {\n    clientX: 0,\n    clientY: 0,\n  };\n  private lastTouches!: TouchList;\n  private touchDecided = false;\n\n  constructor(\n      readonly camera: PerspectiveCamera, readonly element: HTMLElement) {\n    super();\n\n    this._options = Object.assign({}, DEFAULT_OPTIONS);\n\n    this.setOrbit(0, Math.PI / 2, 1);\n    this.setFieldOfView(100);\n    this.jumpToGoal();\n  }\n\n  get interactionEnabled(): boolean {\n    return this._interactionEnabled;\n  }\n\n  enableInteraction() {\n    if (this._interactionEnabled === false) {\n      const {element} = this;\n      element.addEventListener('mousedown', this.onMouseDown);\n      if (!this._disableZoom) {\n        element.addEventListener('wheel', this.onWheel);\n      }\n      element.addEventListener('keydown', this.onKeyDown);\n      element.addEventListener(\n          'touchstart', this.onTouchStart, {passive: true});\n      element.addEventListener('touchmove', this.onTouchMove, {passive: false});\n\n      element.addEventListener('touchend', this.onTouchEnd);\n\n      this.element.style.cursor = 'grab';\n      this._interactionEnabled = true;\n\n      this.updateTouchActionStyle();\n    }\n  }\n\n  disableInteraction() {\n    if (this._interactionEnabled === true) {\n      const {element} = this;\n\n      self.removeEventListener('mousemove', this.onMouseMove);\n      element.removeEventListener('mousedown', this.onMouseDown);\n      if (!this._disableZoom) {\n        element.removeEventListener('wheel', this.onWheel);\n      }\n      element.removeEventListener('keydown', this.onKeyDown);\n      element.removeEventListener('touchstart', this.onTouchStart);\n      element.removeEventListener('touchmove', this.onTouchMove);\n\n      self.removeEventListener('mouseup', this.onMouseUp);\n      element.removeEventListener('touchend', this.onTouchEnd);\n\n      element.style.cursor = '';\n      this.touchMode = null;\n      this._interactionEnabled = false;\n\n      this.updateTouchActionStyle();\n    }\n  }\n\n  /**\n   * The options that are currently configured for the controls instance.\n   */\n  get options() {\n    return this._options;\n  }\n\n  set disableZoom(disable: boolean) {\n    if (this._disableZoom != disable) {\n      this._disableZoom = disable;\n      if (disable === true) {\n        this.element.removeEventListener('wheel', this.onWheel);\n      } else {\n        this.element.addEventListener('wheel', this.onWheel);\n      }\n\n      this.updateTouchActionStyle();\n    }\n  }\n\n  /**\n   * Copy the spherical values that represent the current camera orbital\n   * position relative to the configured target into a provided Spherical\n   * instance. If no Spherical is provided, a new Spherical will be allocated\n   * to copy the values into. The Spherical that values are copied into is\n   * returned.\n   */\n  getCameraSpherical(target: Spherical = new Spherical()) {\n    return target.copy(this.spherical);\n  }\n\n  /**\n   * Returns the camera's current vertical field of view in degrees.\n   */\n  getFieldOfView(): number {\n    return this.camera.fov;\n  }\n\n  /**\n   * Configure the _options of the controls. Configured _options will be\n   * merged with whatever _options have already been configured for this\n   * controls instance.\n   */\n  applyOptions(_options: SmoothControlsOptions) {\n    Object.assign(this._options, _options);\n    // Re-evaluates clamping based on potentially new values for min/max\n    // polar, azimuth and radius:\n    this.setOrbit();\n    this.setFieldOfView(Math.exp(this.goalLogFov));\n  }\n\n  /**\n   * Sets the near and far planes of the camera.\n   */\n  updateNearFar(nearPlane: number, farPlane: number) {\n    this.camera.near = Math.max(nearPlane, farPlane / 1000);\n    this.camera.far = farPlane;\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Sets the aspect ratio of the camera\n   */\n  updateAspect(aspect: number) {\n    this.camera.aspect = aspect;\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Set the absolute orbital goal of the camera. The change will be\n   * applied over a number of frames depending on configured acceleration and\n   * dampening _options.\n   *\n   * Returns true if invoking the method will result in the camera changing\n   * position and/or rotation, otherwise false.\n   */\n  setOrbit(\n      goalTheta: number = this.goalSpherical.theta,\n      goalPhi: number = this.goalSpherical.phi,\n      goalRadius: number = this.goalSpherical.radius): boolean {\n    const {\n      minimumAzimuthalAngle,\n      maximumAzimuthalAngle,\n      minimumPolarAngle,\n      maximumPolarAngle,\n      minimumRadius,\n      maximumRadius\n    } = this._options;\n\n    const {theta, phi, radius} = this.goalSpherical;\n\n    const nextTheta =\n        clamp(goalTheta, minimumAzimuthalAngle!, maximumAzimuthalAngle!);\n    if (!isFinite(minimumAzimuthalAngle!) &&\n        !isFinite(maximumAzimuthalAngle!)) {\n      this.spherical.theta =\n          this.wrapAngle(this.spherical.theta - nextTheta) + nextTheta;\n    }\n\n    const nextPhi = clamp(goalPhi, minimumPolarAngle!, maximumPolarAngle!);\n    const nextRadius = clamp(goalRadius, minimumRadius!, maximumRadius!);\n\n    if (nextTheta === theta && nextPhi === phi && nextRadius === radius) {\n      return false;\n    }\n\n    this.goalSpherical.theta = nextTheta;\n    this.goalSpherical.phi = nextPhi;\n    this.goalSpherical.radius = nextRadius;\n    this.goalSpherical.makeSafe();\n\n    this.isUserChange = false;\n\n    return true;\n  }\n\n  /**\n   * Subset of setOrbit() above, which only sets the camera's radius.\n   */\n  setRadius(radius: number) {\n    this.goalSpherical.radius = radius;\n    this.setOrbit();\n  }\n\n  /**\n   * Sets the goal field of view for the camera\n   */\n  setFieldOfView(fov: number) {\n    const {minimumFieldOfView, maximumFieldOfView} = this._options;\n    fov = clamp(fov, minimumFieldOfView!, maximumFieldOfView!);\n    this.goalLogFov = Math.log(fov);\n  }\n\n  /**\n   * Sets the smoothing decay time.\n   */\n  setDamperDecayTime(decayMilliseconds: number) {\n    this.thetaDamper.setDecayTime(decayMilliseconds);\n    this.phiDamper.setDecayTime(decayMilliseconds);\n    this.radiusDamper.setDecayTime(decayMilliseconds);\n    this.fovDamper.setDecayTime(decayMilliseconds);\n  }\n\n  /**\n   * Adjust the orbital position of the camera relative to its current orbital\n   * position. Does not let the theta goal get more than pi ahead of the current\n   * theta, which ensures interpolation continues in the direction of the delta.\n   * The deltaZoom parameter adjusts both the field of view and the orbit radius\n   * such that they progress across their allowed ranges in sync.\n   */\n  adjustOrbit(deltaTheta: number, deltaPhi: number, deltaZoom: number) {\n    const {theta, phi, radius} = this.goalSpherical;\n    const {\n      minimumRadius,\n      maximumRadius,\n      minimumFieldOfView,\n      maximumFieldOfView\n    } = this._options;\n\n    const dTheta = this.spherical.theta - theta;\n    const dThetaLimit = Math.PI - 0.001;\n    const goalTheta =\n        theta - clamp(deltaTheta, -dThetaLimit - dTheta, dThetaLimit - dTheta);\n    const goalPhi = phi - deltaPhi;\n\n    const deltaRatio = deltaZoom === 0 ?\n        0 :\n        ((deltaZoom > 0 ? maximumRadius! : minimumRadius!) - radius) /\n            (Math.log(\n                 deltaZoom > 0 ? maximumFieldOfView! : minimumFieldOfView!) -\n             this.goalLogFov);\n\n    const goalRadius = radius +\n        deltaZoom *\n            Math.min(\n                isFinite(deltaRatio) ? deltaRatio : Infinity,\n                maximumRadius! - minimumRadius!);\n    this.setOrbit(goalTheta, goalPhi, goalRadius);\n\n    if (deltaZoom !== 0) {\n      const goalLogFov = this.goalLogFov + deltaZoom;\n      this.setFieldOfView(Math.exp(goalLogFov));\n    }\n  }\n\n  /**\n   * Move the camera instantly instead of accelerating toward the goal\n   * parameters.\n   */\n  jumpToGoal() {\n    this.update(0, SETTLING_TIME);\n  }\n\n  /**\n   * Update controls. In most cases, this will result in the camera\n   * interpolating its position and rotation until it lines up with the\n   * designated goal orbital position.\n   *\n   * Time and delta are measured in milliseconds.\n   */\n  update(_time: number, delta: number) {\n    if (this.isStationary()) {\n      return;\n    }\n    const {maximumPolarAngle, maximumRadius} = this._options;\n\n    const dTheta = this.spherical.theta - this.goalSpherical.theta;\n    if (Math.abs(dTheta) > Math.PI &&\n        !isFinite(this._options.minimumAzimuthalAngle!) &&\n        !isFinite(this._options.maximumAzimuthalAngle!)) {\n      this.spherical.theta -= Math.sign(dTheta) * 2 * Math.PI;\n    }\n\n    this.spherical.theta = this.thetaDamper.update(\n        this.spherical.theta, this.goalSpherical.theta, delta, Math.PI);\n\n    this.spherical.phi = this.phiDamper.update(\n        this.spherical.phi, this.goalSpherical.phi, delta, maximumPolarAngle!);\n\n    this.spherical.radius = this.radiusDamper.update(\n        this.spherical.radius, this.goalSpherical.radius, delta, maximumRadius!\n    );\n\n    this.logFov = this.fovDamper.update(this.logFov, this.goalLogFov, delta, 1);\n\n    this.moveCamera();\n  }\n\n  updateTouchActionStyle() {\n    const {style} = this.element;\n\n    if (this._interactionEnabled) {\n      const {touchAction} = this._options;\n      if (this._disableZoom && touchAction !== 'none') {\n        style.touchAction = 'manipulation';\n      } else {\n        style.touchAction = touchAction!;\n      }\n    } else {\n      style.touchAction = '';\n    }\n  }\n\n  private isStationary(): boolean {\n    return this.goalSpherical.theta === this.spherical.theta &&\n        this.goalSpherical.phi === this.spherical.phi &&\n        this.goalSpherical.radius === this.spherical.radius &&\n        this.goalLogFov === this.logFov;\n  }\n\n  private moveCamera() {\n    // Derive the new camera position from the updated spherical:\n    this.spherical.makeSafe();\n    this.camera.position.setFromSpherical(this.spherical);\n    this.camera.setRotationFromEuler(new Euler(\n        this.spherical.phi - Math.PI / 2, this.spherical.theta, 0, 'YXZ'));\n\n    if (this.camera.fov !== Math.exp(this.logFov)) {\n      this.camera.fov = Math.exp(this.logFov);\n      this.camera.updateProjectionMatrix();\n    }\n\n    const source =\n        this.isUserChange ? ChangeSource.USER_INTERACTION : ChangeSource.NONE;\n\n    this.dispatchEvent({type: 'change', source});\n  }\n\n  private get canInteract(): boolean {\n    if (this._options.interactionPolicy == 'allow-when-focused') {\n      const rootNode = this.element.getRootNode() as Document | ShadowRoot;\n      return rootNode.activeElement === this.element;\n    }\n\n    return this._options.interactionPolicy === 'always-allow';\n  }\n\n  private userAdjustOrbit(\n      deltaTheta: number, deltaPhi: number, deltaZoom: number) {\n    this.adjustOrbit(\n        deltaTheta * this.sensitivity, deltaPhi * this.sensitivity, deltaZoom);\n\n    this.isUserChange = true;\n    // Always make sure that an initial event is triggered in case there is\n    // contention between user interaction and imperative changes. This initial\n    // event will give external observers that chance to observe that\n    // interaction occurred at all:\n    this.dispatchEvent({type: 'change', source: ChangeSource.USER_INTERACTION});\n  }\n\n  // Wraps to bewteen -pi and pi\n  private wrapAngle(radians: number): number {\n    const normalized = (radians + Math.PI) / (2 * Math.PI);\n    const wrapped = normalized - Math.floor(normalized);\n    return wrapped * 2 * Math.PI - Math.PI;\n  }\n\n  private pixelLengthToSphericalAngle(pixelLength: number): number {\n    return 2 * Math.PI * pixelLength / this.element.clientHeight;\n  }\n\n  private twoTouchDistance(touchOne: Touch, touchTwo: Touch): number {\n    const {clientX: xOne, clientY: yOne} = touchOne;\n    const {clientX: xTwo, clientY: yTwo} = touchTwo;\n    const xDelta = xTwo - xOne;\n    const yDelta = yTwo - yOne;\n\n    return Math.sqrt(xDelta * xDelta + yDelta * yDelta);\n  }\n\n  private onMouseMove = (event: MouseEvent) => {\n    this.handleSinglePointerMove(event);\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  };\n\n  private onTouchMove = (event: TouchEvent) => {\n    if (this.touchMode !== null) {\n      this.touchMode(event);\n\n      if (this.touchMode !== null && event.cancelable) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  private touchModeZoom: TouchMode = (event) => {\n    const {targetTouches} = event;\n    if (this.lastTouches.length > 1 && targetTouches.length > 1) {\n      const lastTouchDistance =\n          this.twoTouchDistance(this.lastTouches[0], this.lastTouches[1]);\n      const touchDistance =\n          this.twoTouchDistance(targetTouches[0], targetTouches[1]);\n      const deltaZoom =\n          ZOOM_SENSITIVITY * (lastTouchDistance - touchDistance) / 10.0;\n\n      this.userAdjustOrbit(0, 0, deltaZoom);\n\n      this.lastTouches = targetTouches;\n    }\n  };\n  private touchModeRotate: TouchMode = (event) => {\n    const {targetTouches} = event;\n    const {touchAction} = this._options;\n    if (!this.touchDecided && touchAction !== 'none') {\n      this.touchDecided = true;\n      const {clientX, clientY} = targetTouches[0];\n      const dx = Math.abs(clientX - this.lastPointerPosition.clientX);\n      const dy = Math.abs(clientY - this.lastPointerPosition.clientY);\n      // If motion is mostly vertical, assume scrolling is the intent.\n      if ((touchAction === 'pan-y' && dy > dx) ||\n          (touchAction === 'pan-x' && dx > dy)) {\n        this.touchMode = null;\n        return;\n      }\n    }\n    this.handleSinglePointerMove(targetTouches[0]);\n\n    this.lastTouches = targetTouches;\n  };\n\n  private handleSinglePointerMove(pointer: Pointer) {\n    const {clientX, clientY} = pointer;\n    const deltaTheta = this.pixelLengthToSphericalAngle(\n        clientX - this.lastPointerPosition.clientX);\n    const deltaPhi = this.pixelLengthToSphericalAngle(\n        clientY - this.lastPointerPosition.clientY);\n\n    this.lastPointerPosition.clientX = clientX;\n    this.lastPointerPosition.clientY = clientY;\n\n    if (this.isUserPointing === false) {\n      this.isUserPointing = true;\n      this.dispatchEvent({type: 'pointer-change-start', pointer: {...pointer}});\n    }\n\n    this.userAdjustOrbit(deltaTheta, deltaPhi, 0);\n  }\n\n  private onPointerDown(fn: () => void) {\n    if (!this.canInteract) {\n      return;\n    }\n\n    this.isUserPointing = false;\n\n    fn();\n  }\n\n  private onMouseDown = (event: MouseEvent) => {\n    this.onPointerDown(() => {\n      self.addEventListener('mousemove', this.onMouseMove);\n      self.addEventListener('mouseup', this.onMouseUp, {once: true});\n      this.handleSinglePointerDown(event);\n    });\n  };\n\n  private onTouchStart = (event: TouchEvent) => {\n    this.onPointerDown(() => {\n      const {targetTouches, changedTouches, touches} = event;\n      if (targetTouches.length === changedTouches.length) {\n        this.touchMode = null;\n        this.touchDecided = false;\n      }\n\n      if (targetTouches.length === touches.length) {\n        this.onTouchChange(event);\n      }\n    });\n  };\n\n  private onTouchChange(event: TouchEvent) {\n    const {targetTouches} = event;\n\n    switch (targetTouches.length) {\n      default:\n      case 1:\n        this.touchMode = this.touchModeRotate;\n        this.handleSinglePointerDown(targetTouches[0]);\n        break;\n      case 2:\n        this.touchMode = this._disableZoom ||\n                (this.touchDecided && this.touchMode === null) ?\n            null :\n            this.touchModeZoom;\n        this.touchDecided = true;\n        break;\n    }\n\n    this.lastTouches = targetTouches;\n  }\n\n  private handleSinglePointerDown(pointer: Pointer) {\n    this.lastPointerPosition.clientX = pointer.clientX;\n    this.lastPointerPosition.clientY = pointer.clientY;\n    this.element.style.cursor = 'grabbing';\n  }\n\n  private onPointerUp() {\n    this.element.style.cursor = 'grab';\n\n    if (this.isUserPointing) {\n      this.dispatchEvent(\n          {type: 'pointer-change-end', pointer: {...this.lastPointerPosition}});\n    }\n  }\n\n  private onMouseUp = (_event: MouseEvent) => {\n    self.removeEventListener('mousemove', this.onMouseMove);\n\n    this.onPointerUp();\n  };\n\n  private onTouchEnd = (event: TouchEvent) => {\n    if (event.targetTouches.length > 0 && this.touchMode !== null) {\n      this.onTouchChange(event);\n    }\n\n    this.onPointerUp();\n  };\n\n  private onWheel = (event: Event) => {\n    if (!this.canInteract) {\n      return;\n    }\n\n    const deltaZoom = (event as WheelEvent).deltaY *\n        ((event as WheelEvent).deltaMode == 1 ? 18 : 1) * ZOOM_SENSITIVITY / 30;\n    this.userAdjustOrbit(0, 0, deltaZoom);\n\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  };\n\n  private onKeyDown = (event: KeyboardEvent) => {\n    // We track if the key is actually one we respond to, so as not to\n    // accidentally clober unrelated key inputs when the <model-viewer> has\n    // focus.\n    let relevantKey = false;\n\n    switch (event.keyCode) {\n      case KeyCode.PAGE_UP:\n        relevantKey = true;\n        this.userAdjustOrbit(0, 0, ZOOM_SENSITIVITY);\n        break;\n      case KeyCode.PAGE_DOWN:\n        relevantKey = true;\n        this.userAdjustOrbit(0, 0, -1 * ZOOM_SENSITIVITY);\n        break;\n      case KeyCode.UP:\n        relevantKey = true;\n        this.userAdjustOrbit(0, -KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case KeyCode.DOWN:\n        relevantKey = true;\n        this.userAdjustOrbit(0, KEYBOARD_ORBIT_INCREMENT, 0);\n        break;\n      case KeyCode.LEFT:\n        relevantKey = true;\n        this.userAdjustOrbit(-KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      case KeyCode.RIGHT:\n        relevantKey = true;\n        this.userAdjustOrbit(KEYBOARD_ORBIT_INCREMENT, 0, 0);\n        break;\n      default:\n        break;\n    }\n\n    if (relevantKey && event.cancelable) {\n      event.preventDefault();\n    }\n  };\n}\n"]}